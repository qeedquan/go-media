// Code generated by "stringer -type Op"; DO NOT EDIT.

package c66asm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UNKNOWN-0]
	_ = x[ABS-1]
	_ = x[ABS2-2]
	_ = x[ABSDP-3]
	_ = x[ABSSP-4]
	_ = x[ADD-5]
	_ = x[ADDAB-6]
	_ = x[ADDAD-7]
	_ = x[ADDAH-8]
	_ = x[ADDAW-9]
	_ = x[ADDDP-10]
	_ = x[ADDK-11]
	_ = x[ADDKPC-12]
	_ = x[ADDSP-13]
	_ = x[ADDSUB-14]
	_ = x[ADDSUB2-15]
	_ = x[ADDU-16]
	_ = x[ADD2-17]
	_ = x[ADD4-18]
	_ = x[AND-19]
	_ = x[ANDN-20]
	_ = x[AVG2-21]
	_ = x[AVGU4-22]
	_ = x[B-23]
	_ = x[BDEC-24]
	_ = x[BITC4-25]
	_ = x[BITR-26]
	_ = x[BNOP-27]
	_ = x[BPOS-28]
	_ = x[CALLP-29]
	_ = x[CCMATMPY-30]
	_ = x[CCMATMPYR1-31]
	_ = x[CCMPY32R1-32]
	_ = x[CLR-33]
	_ = x[CMATMPY-34]
	_ = x[CMATMPYR1-35]
	_ = x[CMPEQ-36]
	_ = x[CMPEQ2-37]
	_ = x[CMPEQ4-38]
	_ = x[CMPEQDP-39]
	_ = x[CMPEQSP-40]
	_ = x[CMPGT-41]
	_ = x[CMPGT2-42]
	_ = x[CMPGTDP-43]
	_ = x[CMPGTSP-44]
	_ = x[CMPGTU-45]
	_ = x[CMPGTU4-46]
	_ = x[CMPLT-47]
	_ = x[CMPLT2-48]
	_ = x[CMPLTDP-49]
	_ = x[CMPLTSP-50]
	_ = x[CMPLTU-51]
	_ = x[CMPLTU4-52]
	_ = x[CMPY-53]
	_ = x[CMPY32R1-54]
	_ = x[CMPYR-55]
	_ = x[CMPYR1-56]
	_ = x[CMPYSP-57]
	_ = x[CROT270-58]
	_ = x[CROT90-59]
	_ = x[DADD-60]
	_ = x[DADD2-61]
	_ = x[DADDSP-62]
	_ = x[DAPYS2-63]
	_ = x[DAVG2-64]
	_ = x[DAVGNR2-65]
	_ = x[DAVGNRU4-66]
	_ = x[DAVGU4-67]
	_ = x[DCCMPY-68]
	_ = x[DCCMPYR1-69]
	_ = x[DCMPEQ2-70]
	_ = x[DCMPEQ4-71]
	_ = x[DCMPGT2-72]
	_ = x[DCMPGTU4-73]
	_ = x[DCMPY-74]
	_ = x[DCMPYR1-75]
	_ = x[DCROT270-76]
	_ = x[DCROT90-77]
	_ = x[DDOTP4-78]
	_ = x[DDOTP4H-79]
	_ = x[DDOTPH2-80]
	_ = x[DDOTPH2R-81]
	_ = x[DDOTPL2-82]
	_ = x[DDOTPL2R-83]
	_ = x[DDOTPSU4H-84]
	_ = x[DEAL-85]
	_ = x[DINT-86]
	_ = x[DINTHSP-87]
	_ = x[DINTHSPU-88]
	_ = x[DINTSPU-89]
	_ = x[DMAX2-90]
	_ = x[DMAXU4-91]
	_ = x[DMIN2-92]
	_ = x[DMINU4-93]
	_ = x[DMPY2-94]
	_ = x[DMPYSP-95]
	_ = x[DMPYSU4-96]
	_ = x[DMPYU2-97]
	_ = x[DMPYU4-98]
	_ = x[DMV-99]
	_ = x[DMVD-100]
	_ = x[DOTP2-101]
	_ = x[DOTP4H-102]
	_ = x[DOTPN2-103]
	_ = x[DOTPNRSU2-104]
	_ = x[DOTPNRUS2-105]
	_ = x[DOTPRSU2-106]
	_ = x[DOTPRUS2-107]
	_ = x[DOTPSU4-108]
	_ = x[DOTPSU4H-109]
	_ = x[DOTPUS4-110]
	_ = x[DOTPU4-111]
	_ = x[DPACK2-112]
	_ = x[DPACKH2-113]
	_ = x[DPACKH4-114]
	_ = x[DPACKHL2-115]
	_ = x[DPACKL2-116]
	_ = x[DPACKL4-117]
	_ = x[DPACKLH2-118]
	_ = x[DPACKLH4-119]
	_ = x[DPACKX2-120]
	_ = x[DPINT-121]
	_ = x[DPSP-122]
	_ = x[DPTRUNC-123]
	_ = x[DSADD-124]
	_ = x[DSADD2-125]
	_ = x[DSHL-126]
	_ = x[DSHL2-127]
	_ = x[DSHR-128]
	_ = x[DSHR2-129]
	_ = x[DSHRU-130]
	_ = x[DSHRU2-131]
	_ = x[DSMPY2-132]
	_ = x[DSPACKU4-133]
	_ = x[DSPINT-134]
	_ = x[DSPINTH-135]
	_ = x[DSSUB-136]
	_ = x[DSSUB2-137]
	_ = x[DSUB-138]
	_ = x[DSUB2-139]
	_ = x[DSUBSP-140]
	_ = x[DXPND2-141]
	_ = x[DXPND4-142]
	_ = x[EXT-143]
	_ = x[EXTU-144]
	_ = x[FADDDP-145]
	_ = x[FADDSP-146]
	_ = x[FMPYDP-147]
	_ = x[FSUBDP-148]
	_ = x[FSUBSP-149]
	_ = x[GMPY-150]
	_ = x[GMPY4-151]
	_ = x[IDLE-152]
	_ = x[INTDP-153]
	_ = x[INTDPU-154]
	_ = x[INTSP-155]
	_ = x[INTSPU-156]
	_ = x[LAND-157]
	_ = x[LANDN-158]
	_ = x[LDBU-159]
	_ = x[LDDW-160]
	_ = x[LDHU-161]
	_ = x[LDNDW-162]
	_ = x[LDNW-163]
	_ = x[LDW-164]
	_ = x[LMBD-165]
	_ = x[LOR-166]
	_ = x[MAX2-167]
	_ = x[MAXU4-168]
	_ = x[MFENCE-169]
	_ = x[MIN2-170]
	_ = x[MINU4-171]
	_ = x[MPY-172]
	_ = x[MPY2-173]
	_ = x[MPY2IR-174]
	_ = x[MPY32-175]
	_ = x[MPY32SU-176]
	_ = x[MPY32U-177]
	_ = x[MPY32US-178]
	_ = x[MPYDP-179]
	_ = x[MPYH-180]
	_ = x[MPYHI-181]
	_ = x[MPYHIR-182]
	_ = x[MPYHL-183]
	_ = x[MPYHLU-184]
	_ = x[MPYHSLU-185]
	_ = x[HPYHSU-186]
	_ = x[MPYHU-187]
	_ = x[MPYHULS-188]
	_ = x[MPYHUS-189]
	_ = x[MPYI-190]
	_ = x[MPYID-191]
	_ = x[MPYIH-192]
	_ = x[MPYIHR-193]
	_ = x[MPYIL-194]
	_ = x[MPYILR-195]
	_ = x[MPYLH-196]
	_ = x[MPYLHU-197]
	_ = x[MPYLI-198]
	_ = x[MPYLIR-199]
	_ = x[MPYLSHU-200]
	_ = x[MPYLUHS-201]
	_ = x[MPYSP-202]
	_ = x[MPYSPDP-203]
	_ = x[MPYSP2DP-204]
	_ = x[MPYSU-205]
	_ = x[MPYSU4-206]
	_ = x[MPYU-207]
	_ = x[MPYU2-208]
	_ = x[MPYU4-209]
	_ = x[MPYUS-210]
	_ = x[MPYUS4-211]
	_ = x[MV-212]
	_ = x[MVC-213]
	_ = x[MVD-214]
	_ = x[MVK-215]
	_ = x[MVKH-216]
	_ = x[MVKLH-217]
	_ = x[MVKL-218]
	_ = x[NEG-219]
	_ = x[NOP-220]
	_ = x[NORM-221]
	_ = x[NOT-222]
	_ = x[OR-223]
	_ = x[PACK2-224]
	_ = x[PACKH2-225]
	_ = x[PACKH4-226]
	_ = x[PACKHL2-227]
	_ = x[PACKLH2-228]
	_ = x[PACKL4-229]
	_ = x[QMPY32-230]
	_ = x[QMPYSP-231]
	_ = x[QSMPY32R1-232]
	_ = x[RCPDP-233]
	_ = x[RCPSP-234]
	_ = x[RINT-235]
	_ = x[ROTL-236]
	_ = x[RPACK2-237]
	_ = x[RSQRDP-238]
	_ = x[RSQRSP-239]
	_ = x[SADD-240]
	_ = x[SADD2-241]
	_ = x[SADDSUB-242]
	_ = x[SADDSUB2-243]
	_ = x[SADDSU2-244]
	_ = x[SADDUS2-245]
	_ = x[SADDU4-246]
	_ = x[SAT-247]
	_ = x[SET-248]
	_ = x[SHFL-249]
	_ = x[SHFL3-250]
	_ = x[SHL-251]
	_ = x[SHL2-252]
	_ = x[SHLMB-253]
	_ = x[SHR-254]
	_ = x[SHR2-255]
	_ = x[SHRMB-256]
	_ = x[SHRU-257]
	_ = x[SHRU2-258]
	_ = x[SMPY-259]
	_ = x[SMPYH-260]
	_ = x[SMPYHL-261]
	_ = x[SMPYLH-262]
	_ = x[SMPY2-263]
	_ = x[SMPY32-264]
	_ = x[SPACK2-265]
	_ = x[SPACKU4-266]
	_ = x[SPDP-267]
	_ = x[SPINT-268]
	_ = x[SPKERNEL-269]
	_ = x[SPKERNELR-270]
	_ = x[SPLOOP-271]
	_ = x[SPLOOPD-272]
	_ = x[SPLOOPW-273]
	_ = x[SPMASK-274]
	_ = x[SPMASKR-275]
	_ = x[SPTRUNC-276]
	_ = x[SSHL-277]
	_ = x[SSHVL-278]
	_ = x[SSHVR-279]
	_ = x[SSUB-280]
	_ = x[SSUB2-281]
	_ = x[STB-282]
	_ = x[STDW-283]
	_ = x[STH-284]
	_ = x[STNDW-285]
	_ = x[STNW-286]
	_ = x[STW-287]
	_ = x[SUB-288]
	_ = x[SUBAB-289]
	_ = x[SUBABS4-290]
	_ = x[SUBAH-291]
	_ = x[SUBAW-292]
	_ = x[SUBC-293]
	_ = x[SUBDP-294]
	_ = x[SUBSP-295]
	_ = x[SUBU-296]
	_ = x[SUB2-297]
	_ = x[SUB4-298]
	_ = x[SWAP2-299]
	_ = x[SWAP4-300]
	_ = x[SWE-301]
	_ = x[SWENR-302]
	_ = x[UNPKBU4-303]
	_ = x[UNPKH2-304]
	_ = x[UNPKHU2-305]
	_ = x[UNPKHU4-306]
	_ = x[UNPKLU4-307]
	_ = x[XOR-308]
	_ = x[XORMPY-309]
	_ = x[XPND2-310]
	_ = x[XPND4-311]
	_ = x[ZERO-312]
}

const _Op_name = "UNKNOWNABSABS2ABSDPABSSPADDADDABADDADADDAHADDAWADDDPADDKADDKPCADDSPADDSUBADDSUB2ADDUADD2ADD4ANDANDNAVG2AVGU4BBDECBITC4BITRBNOPBPOSCALLPCCMATMPYCCMATMPYR1CCMPY32R1CLRCMATMPYCMATMPYR1CMPEQCMPEQ2CMPEQ4CMPEQDPCMPEQSPCMPGTCMPGT2CMPGTDPCMPGTSPCMPGTUCMPGTU4CMPLTCMPLT2CMPLTDPCMPLTSPCMPLTUCMPLTU4CMPYCMPY32R1CMPYRCMPYR1CMPYSPCROT270CROT90DADDDADD2DADDSPDAPYS2DAVG2DAVGNR2DAVGNRU4DAVGU4DCCMPYDCCMPYR1DCMPEQ2DCMPEQ4DCMPGT2DCMPGTU4DCMPYDCMPYR1DCROT270DCROT90DDOTP4DDOTP4HDDOTPH2DDOTPH2RDDOTPL2DDOTPL2RDDOTPSU4HDEALDINTDINTHSPDINTHSPUDINTSPUDMAX2DMAXU4DMIN2DMINU4DMPY2DMPYSPDMPYSU4DMPYU2DMPYU4DMVDMVDDOTP2DOTP4HDOTPN2DOTPNRSU2DOTPNRUS2DOTPRSU2DOTPRUS2DOTPSU4DOTPSU4HDOTPUS4DOTPU4DPACK2DPACKH2DPACKH4DPACKHL2DPACKL2DPACKL4DPACKLH2DPACKLH4DPACKX2DPINTDPSPDPTRUNCDSADDDSADD2DSHLDSHL2DSHRDSHR2DSHRUDSHRU2DSMPY2DSPACKU4DSPINTDSPINTHDSSUBDSSUB2DSUBDSUB2DSUBSPDXPND2DXPND4EXTEXTUFADDDPFADDSPFMPYDPFSUBDPFSUBSPGMPYGMPY4IDLEINTDPINTDPUINTSPINTSPULANDLANDNLDBULDDWLDHULDNDWLDNWLDWLMBDLORMAX2MAXU4MFENCEMIN2MINU4MPYMPY2MPY2IRMPY32MPY32SUMPY32UMPY32USMPYDPMPYHMPYHIMPYHIRMPYHLMPYHLUMPYHSLUHPYHSUMPYHUMPYHULSMPYHUSMPYIMPYIDMPYIHMPYIHRMPYILMPYILRMPYLHMPYLHUMPYLIMPYLIRMPYLSHUMPYLUHSMPYSPMPYSPDPMPYSP2DPMPYSUMPYSU4MPYUMPYU2MPYU4MPYUSMPYUS4MVMVCMVDMVKMVKHMVKLHMVKLNEGNOPNORMNOTORPACK2PACKH2PACKH4PACKHL2PACKLH2PACKL4QMPY32QMPYSPQSMPY32R1RCPDPRCPSPRINTROTLRPACK2RSQRDPRSQRSPSADDSADD2SADDSUBSADDSUB2SADDSU2SADDUS2SADDU4SATSETSHFLSHFL3SHLSHL2SHLMBSHRSHR2SHRMBSHRUSHRU2SMPYSMPYHSMPYHLSMPYLHSMPY2SMPY32SPACK2SPACKU4SPDPSPINTSPKERNELSPKERNELRSPLOOPSPLOOPDSPLOOPWSPMASKSPMASKRSPTRUNCSSHLSSHVLSSHVRSSUBSSUB2STBSTDWSTHSTNDWSTNWSTWSUBSUBABSUBABS4SUBAHSUBAWSUBCSUBDPSUBSPSUBUSUB2SUB4SWAP2SWAP4SWESWENRUNPKBU4UNPKH2UNPKHU2UNPKHU4UNPKLU4XORXORMPYXPND2XPND4ZERO"

var _Op_index = [...]uint16{0, 7, 10, 14, 19, 24, 27, 32, 37, 42, 47, 52, 56, 62, 67, 73, 80, 84, 88, 92, 95, 99, 103, 108, 109, 113, 118, 122, 126, 130, 135, 143, 153, 162, 165, 172, 181, 186, 192, 198, 205, 212, 217, 223, 230, 237, 243, 250, 255, 261, 268, 275, 281, 288, 292, 300, 305, 311, 317, 324, 330, 334, 339, 345, 351, 356, 363, 371, 377, 383, 391, 398, 405, 412, 420, 425, 432, 440, 447, 453, 460, 467, 475, 482, 490, 499, 503, 507, 514, 522, 529, 534, 540, 545, 551, 556, 562, 569, 575, 581, 584, 588, 593, 599, 605, 614, 623, 631, 639, 646, 654, 661, 667, 673, 680, 687, 695, 702, 709, 717, 725, 732, 737, 741, 748, 753, 759, 763, 768, 772, 777, 782, 788, 794, 802, 808, 815, 820, 826, 830, 835, 841, 847, 853, 856, 860, 866, 872, 878, 884, 890, 894, 899, 903, 908, 914, 919, 925, 929, 934, 938, 942, 946, 951, 955, 958, 962, 965, 969, 974, 980, 984, 989, 992, 996, 1002, 1007, 1014, 1020, 1027, 1032, 1036, 1041, 1047, 1052, 1058, 1065, 1071, 1076, 1083, 1089, 1093, 1098, 1103, 1109, 1114, 1120, 1125, 1131, 1136, 1142, 1149, 1156, 1161, 1168, 1176, 1181, 1187, 1191, 1196, 1201, 1206, 1212, 1214, 1217, 1220, 1223, 1227, 1232, 1236, 1239, 1242, 1246, 1249, 1251, 1256, 1262, 1268, 1275, 1282, 1288, 1294, 1300, 1309, 1314, 1319, 1323, 1327, 1333, 1339, 1345, 1349, 1354, 1361, 1369, 1376, 1383, 1389, 1392, 1395, 1399, 1404, 1407, 1411, 1416, 1419, 1423, 1428, 1432, 1437, 1441, 1446, 1452, 1458, 1463, 1469, 1475, 1482, 1486, 1491, 1499, 1508, 1514, 1521, 1528, 1534, 1541, 1548, 1552, 1557, 1562, 1566, 1571, 1574, 1578, 1581, 1586, 1590, 1593, 1596, 1601, 1608, 1613, 1618, 1622, 1627, 1632, 1636, 1640, 1644, 1649, 1654, 1657, 1662, 1669, 1675, 1682, 1689, 1696, 1699, 1705, 1710, 1715, 1719}

func (i Op) String() string {
	if i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
