package xed

/*
#include <xed-interface.h>
#include <stdlib.h>
*/
import "C"
import "unsafe"

type (
	CPUIDBit C.xed_cpuid_bit_enum_t
	CPUIDRec C.xed_cpuid_rec_t
)

const (
	CPUID_BIT_INVALID          CPUIDBit = C.XED_CPUID_BIT_INVALID
	CPUID_BIT_ADOXADCX         CPUIDBit = C.XED_CPUID_BIT_ADOXADCX
	CPUID_BIT_AES              CPUIDBit = C.XED_CPUID_BIT_AES
	CPUID_BIT_AVX              CPUIDBit = C.XED_CPUID_BIT_AVX
	CPUID_BIT_AVX2             CPUIDBit = C.XED_CPUID_BIT_AVX2
	CPUID_BIT_AVX512BW         CPUIDBit = C.XED_CPUID_BIT_AVX512BW
	CPUID_BIT_AVX512CD         CPUIDBit = C.XED_CPUID_BIT_AVX512CD
	CPUID_BIT_AVX512DQ         CPUIDBit = C.XED_CPUID_BIT_AVX512DQ
	CPUID_BIT_AVX512ER         CPUIDBit = C.XED_CPUID_BIT_AVX512ER
	CPUID_BIT_AVX512F          CPUIDBit = C.XED_CPUID_BIT_AVX512F
	CPUID_BIT_AVX512IFMA       CPUIDBit = C.XED_CPUID_BIT_AVX512IFMA
	CPUID_BIT_AVX512PF         CPUIDBit = C.XED_CPUID_BIT_AVX512PF
	CPUID_BIT_AVX512VBMI       CPUIDBit = C.XED_CPUID_BIT_AVX512VBMI
	CPUID_BIT_AVX512VL         CPUIDBit = C.XED_CPUID_BIT_AVX512VL
	CPUID_BIT_AVX512_4FMAPS    CPUIDBit = C.XED_CPUID_BIT_AVX512_4FMAPS
	CPUID_BIT_AVX512_4VNNIW    CPUIDBit = C.XED_CPUID_BIT_AVX512_4VNNIW
	CPUID_BIT_AVX512_BITALG    CPUIDBit = C.XED_CPUID_BIT_AVX512_BITALG
	CPUID_BIT_AVX512_VBMI2     CPUIDBit = C.XED_CPUID_BIT_AVX512_VBMI2
	CPUID_BIT_AVX512_VNNI      CPUIDBit = C.XED_CPUID_BIT_AVX512_VNNI
	CPUID_BIT_AVX512_VPOPCNTDQ CPUIDBit = C.XED_CPUID_BIT_AVX512_VPOPCNTDQ
	CPUID_BIT_BMI1             CPUIDBit = C.XED_CPUID_BIT_BMI1
	CPUID_BIT_BMI2             CPUIDBit = C.XED_CPUID_BIT_BMI2
	CPUID_BIT_CET              CPUIDBit = C.XED_CPUID_BIT_CET
	CPUID_BIT_CLDEMOTE         CPUIDBit = C.XED_CPUID_BIT_CLDEMOTE
	CPUID_BIT_CLFLUSH          CPUIDBit = C.XED_CPUID_BIT_CLFLUSH
	CPUID_BIT_CLFLUSHOPT       CPUIDBit = C.XED_CPUID_BIT_CLFLUSHOPT
	CPUID_BIT_CLWB             CPUIDBit = C.XED_CPUID_BIT_CLWB
	CPUID_BIT_CMPXCHG16B       CPUIDBit = C.XED_CPUID_BIT_CMPXCHG16B
	CPUID_BIT_F16C             CPUIDBit = C.XED_CPUID_BIT_F16C
	CPUID_BIT_FMA              CPUIDBit = C.XED_CPUID_BIT_FMA
	CPUID_BIT_FXSAVE           CPUIDBit = C.XED_CPUID_BIT_FXSAVE
	CPUID_BIT_GFNI             CPUIDBit = C.XED_CPUID_BIT_GFNI
	CPUID_BIT_INTEL64          CPUIDBit = C.XED_CPUID_BIT_INTEL64
	CPUID_BIT_INTELPT          CPUIDBit = C.XED_CPUID_BIT_INTELPT
	CPUID_BIT_INVPCID          CPUIDBit = C.XED_CPUID_BIT_INVPCID
	CPUID_BIT_LAHF             CPUIDBit = C.XED_CPUID_BIT_LAHF
	CPUID_BIT_LZCNT            CPUIDBit = C.XED_CPUID_BIT_LZCNT
	CPUID_BIT_MONITOR          CPUIDBit = C.XED_CPUID_BIT_MONITOR
	CPUID_BIT_MONITORX         CPUIDBit = C.XED_CPUID_BIT_MONITORX
	CPUID_BIT_MOVDIR64B        CPUIDBit = C.XED_CPUID_BIT_MOVDIR64B
	CPUID_BIT_MOVDIRI          CPUIDBit = C.XED_CPUID_BIT_MOVDIRI
	CPUID_BIT_MOVEBE           CPUIDBit = C.XED_CPUID_BIT_MOVEBE
	CPUID_BIT_MPX              CPUIDBit = C.XED_CPUID_BIT_MPX
	CPUID_BIT_OSPKU            CPUIDBit = C.XED_CPUID_BIT_OSPKU
	CPUID_BIT_OSXSAVE          CPUIDBit = C.XED_CPUID_BIT_OSXSAVE
	CPUID_BIT_PCLMULQDQ        CPUIDBit = C.XED_CPUID_BIT_PCLMULQDQ
	CPUID_BIT_PCONFIG          CPUIDBit = C.XED_CPUID_BIT_PCONFIG
	CPUID_BIT_PKU              CPUIDBit = C.XED_CPUID_BIT_PKU
	CPUID_BIT_POPCNT           CPUIDBit = C.XED_CPUID_BIT_POPCNT
	CPUID_BIT_PREFETCHW        CPUIDBit = C.XED_CPUID_BIT_PREFETCHW
	CPUID_BIT_PREFETCHWT1      CPUIDBit = C.XED_CPUID_BIT_PREFETCHWT1
	CPUID_BIT_PTWRITE          CPUIDBit = C.XED_CPUID_BIT_PTWRITE
	CPUID_BIT_RDP              CPUIDBit = C.XED_CPUID_BIT_RDP
	CPUID_BIT_RDRAND           CPUIDBit = C.XED_CPUID_BIT_RDRAND
	CPUID_BIT_RDSEED           CPUIDBit = C.XED_CPUID_BIT_RDSEED
	CPUID_BIT_RDTSCP           CPUIDBit = C.XED_CPUID_BIT_RDTSCP
	CPUID_BIT_RDWRFSGS         CPUIDBit = C.XED_CPUID_BIT_RDWRFSGS
	CPUID_BIT_RTM              CPUIDBit = C.XED_CPUID_BIT_RTM
	CPUID_BIT_SGX              CPUIDBit = C.XED_CPUID_BIT_SGX
	CPUID_BIT_SHA              CPUIDBit = C.XED_CPUID_BIT_SHA
	CPUID_BIT_SMAP             CPUIDBit = C.XED_CPUID_BIT_SMAP
	CPUID_BIT_SMX              CPUIDBit = C.XED_CPUID_BIT_SMX
	CPUID_BIT_SSE              CPUIDBit = C.XED_CPUID_BIT_SSE
	CPUID_BIT_SSE2             CPUIDBit = C.XED_CPUID_BIT_SSE2
	CPUID_BIT_SSE3             CPUIDBit = C.XED_CPUID_BIT_SSE3
	CPUID_BIT_SSE4             CPUIDBit = C.XED_CPUID_BIT_SSE4
	CPUID_BIT_SSE42            CPUIDBit = C.XED_CPUID_BIT_SSE42
	CPUID_BIT_SSSE3            CPUIDBit = C.XED_CPUID_BIT_SSSE3
	CPUID_BIT_VAES             CPUIDBit = C.XED_CPUID_BIT_VAES
	CPUID_BIT_VMX              CPUIDBit = C.XED_CPUID_BIT_VMX
	CPUID_BIT_VPCLMULQDQ       CPUIDBit = C.XED_CPUID_BIT_VPCLMULQDQ
	CPUID_BIT_WAITPKG          CPUIDBit = C.XED_CPUID_BIT_WAITPKG
	CPUID_BIT_WBNOINVD         CPUIDBit = C.XED_CPUID_BIT_WBNOINVD
	CPUID_BIT_XSAVE            CPUIDBit = C.XED_CPUID_BIT_XSAVE
	CPUID_BIT_XSAVEC           CPUIDBit = C.XED_CPUID_BIT_XSAVEC
	CPUID_BIT_XSAVEOPT         CPUIDBit = C.XED_CPUID_BIT_XSAVEOPT
	CPUID_BIT_XSAVES           CPUIDBit = C.XED_CPUID_BIT_XSAVES
	CPUID_BIT_LAST             CPUIDBit = C.XED_CPUID_BIT_LAST
)

func GetCPUIDRec(cpuid_bit CPUIDBit, p *CPUIDRec) bool {
	return C.xed_get_cpuid_rec(C.xed_cpuid_bit_enum_t(cpuid_bit), (*C.xed_cpuid_rec_t)(p)) != 0
}

func Str2CpuIDBit(str string) CPUIDBit {
	cstr := C.CString(str)
	defer C.free(unsafe.Pointer(cstr))
	return CPUIDBit(C.str2xed_cpuid_bit_enum_t(cstr))
}

func (c *CPUIDRec) Leaf() uint {
	return uint(c.leaf)
}

func (c *CPUIDRec) Subleaf() uint {
	return uint(c.subleaf)
}

func (c *CPUIDRec) Bit() uint {
	return uint(c.bit)
}

func (c *CPUIDRec) Reg() Reg {
	return Reg(c.reg)
}